{
    "collab_server" : "",
    "contents" : "# Fri Nov 16 15:44:08 2018 ------------------------------\nrm(list=ls())\nload('Data.Rdata')\n\nindex <- grep('BGI',upgenes$ï..Gene.ID)#Filter our BGI novel genes.\nupgenes <- upgenes[-index,] \n\nindex <- grep('BGI',background_all$ï..Gene.ID)\nbackground_all <- background_all[-index,]#filter out BGI_novel genes.\n\nindex <- grep('BGI',background_DEG$ï..Gene.ID)\nbackground_DEG <- background_DEG[-index,]\n\nentr_up <- as.vector(upgenes$ï..Gene.ID)#这些上调的基因可以导入clueGO直接进行分析了。\nentr_bg <- as.vector(background_all$ï..Gene.ID)\n\nlibrary(clusterProfiler)\nlibrary(org.Hs.eg.db)\nlibrary(enrichplot)\n\n#convert gene symbols to ENTREZID ID\n#Attention: BGI report includes entrezID. No need to run the following 2 commands. Just filter out\n#the BGI_novel genes.\n\n#keytypes(org.Hs.eg.db)\n#entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),OrgDb = 'org.Hs.eg.db')\n\n\n#The ID type (both fromType & toType) should be one of ‘kegg’, ‘ncbi-geneid’, ‘ncbi-proteinid’ or \n#‘uniprot’. The ‘kegg’ is the primary ID used in KEGG database. The data source of KEGG was from NCBI. \n#A rule of thumb for the ‘kegg’ ID is entrez ID for eukaryote species and Locus ID for prokaryotes.\n\n#keg2np <- bitr_kegg(entr_up$ENTREZID,fromType = 'kegg',toType = 'ncbi-proteinid',organism = 'hsa')\n#head(keg2np)\n\n#GO analysis\n#GO classification/GoupGO 分析\n\nggo <- groupGO(gene = entr_up,OrgDb = org.Hs.eg.db,ont = 'BP',level = 3,keyType = 'ENTREZID',readable = T)\nhead(ggo)\nbarplot(ggo,drop=T,x = \"GeneRatio\",showCategory=20,title='GO_GeneRatio')\n\n#GO over-representation test/enrichGO 分析\nhead(entr_bg)\n\nego <- enrichGO(gene = entr_up,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',\n                pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.01,\n                readable = T,universe = entr_bg)#background genes: use all gene. Don't use DEGs only.\nhead(ego)\n\n#plot\nbarplot(ego,drop=T,showCategory = 20,title=paste0(\"enrichGo_\",'BP'))\ndotplot(ego,showCategory = 20,title=paste0(\"enrichGo_\",'BP'))\nemapplot(ego, showCategory=20,color = \"p.adjust\",layout = 'kk',title=paste0(\"enrichGo_\",'BP'))\ncnetplot(ego, showCategory = 20,title=paste0(\"enrichGo_\",'BP'))\ngoplot(ego,showCategory =20)\n\nego2 <- gofilter(ego,level = 3)#remove specific GO terms or GO level (in case of redundance)\nbarplot(ego2,drop=T,showCategory = 20,title=paste0(\"enrichGo_\",'BP'))\ndotplot(ego2,showCategory = 20,title=paste0(\"enrichGo_\",'BP'))\nemapplot(ego2, showCategory=20,color = \"p.adjust\",layout = 'kk',title=paste0(\"enrichGo_\",'BP'))\ncnetplot(ego2, showCategory = 20,title=paste0(\"enrichGo_\",'BP'))\n#get genes in significant pathways\nsig_genes_tmp <- ego@result\nsig_genes_tmp <- sig_genes_tmp[sig_genes_tmp$p.adjust<0.05,]\nMySplit <- function(i){\n  tmp <- sig_genes_tmp[i,'geneID'] %>% str_split(pattern = '/') %>% unlist(recursive = T)\n  return(tmp)\n}\nsig_genes <- vector()\nfor (i in 1:nrow(sig_genes_tmp)) {\n  tmp <- MySplit(i)\n  sig_genes <- c(sig_genes,tmp)\n}\nsig_genes <- unique(sig_genes)\ncat(sig_genes,sep = '\\n')#按行打印出来，可以直接复制到stringDB里面做蛋白相互作用\n\n\n\n\n#plot for BP/CC/MF individually\npdf('GO_plot.PDF',width = 14,onefile = T)\nfor (i in c('CC','BP','MF')) {\n  print(paste0('Now processing:',i))\n  ego <- enrichGO(gene = entr_up,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,\n                  pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.01,\n                  readable = T,universe = entr_bg)\n  a <- barplot(ego,drop=T,showCategory = 20,title=paste0(\"enrichGo_\",i))\n  b <- dotplot(ego,showCategory = 20,title=paste0(\"enrichGo_\",i))\n  c <- emapplot(ego, showCategory=20,color = \"p.adjust\",layout = 'kk',title=paste0(\"enrichGo_\",i))\n  d <- cnetplot(ego, showCategory = 20,title=paste0(\"enrichGo_\",i))\n  print(a)\n  print(b)\n  print(c)\n  print(d)\n}\ndev.off()\n\n#GO GSEA: \n#1st:\n#prepare your own geneList\n#https://github.com/GuangchuangYu/DOSE/wiki/how-to-prepare-your-own-geneList\n\ngeneList <- background_all$log2.HN.FK.\nnames(geneList) <- as.character(background_all$ï..Gene.ID)\ngeneList <- sort(geneList,decreasing = T)\nego3 <- gseGO(geneList     = geneList,\n              OrgDb        = org.Hs.eg.db,\n              ont          = \"BP\",\n              nPerm        = 1000,\n              minGSSize    = 10,\n              maxGSSize    = 500,\n              pvalueCutoff = 0.05,\n              verbose      = FALSE)\n\ndotplot(ego3,showCategory = 20)\n\nego3 <- setReadable(ego3,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)\n\n#GSEA plot\npdf(file = 'GO_GSEA.pdf',width = 10,onefile = T)\ndotplot(ego3,showCategory = 20)\nfor (i in 1:20) {\n  tmp <- gseaplot(ego3, geneSetID = ego3@result$ID[i],\n                  title=paste(ego3@result$ID[i],ego3@result$Description[i],sep = '_'))\n  print(tmp)\n}\ndev.off()\n\n\n\n",
    "created" : 1544159853550.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2510855525",
    "id" : "74EAA1D",
    "lastKnownWriteTime" : 1544147875,
    "last_content_update" : 1544147875,
    "path" : "H:/Github/BGI/GO.R",
    "project_path" : "GO.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_down.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
# Thu Dec 13 13:31:34 2018 ------------------------------
rm(list = ls())
load('Data.Rdata')
View(downgenes)
View(background_all)
View(background_DEG)
colnames(background_all)
head(background_all)
data <- background_all[,2:10]
View(data)
rownames(data) <- data$Other.Gene.ID
colnames(data)
data <- data[,-9]
colnames(data)
save(data,file = "Data_Jianming.Rdata")
load('Data_Jianming.Rdata')
library(corrplot)
exprSet <- data[,-9]
save(exprSet,file = "Data_Jianming.Rdata")
load('Data_Jianming.Rdata')
library(corrplot)
corrplot(cor(exprSet))
rm(list = ls())
load('Data.Rdata')
data <- background_all[,2:10]
rownames(data) <- data$Other.Gene.ID
exprSet <- data[,-9]
save(exprSet,file = "Data_Jianming.Rdata")
load('Data_Jianming.Rdata')
library(corrplot)
corrplot(cor(exprSet))
corrplot(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet))
corrplot(cor(log2(exprSet+1)))
head(exprSet)
head(log2(exprSet+1))
corrplot(cor(log2(exprSet+1)),
tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
sig.level = 0.01,insig = 'blank',
corrplot(cor(log2(exprSet+1)),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
library(pheatmap)
corrplot(scale(cor(exprSet)),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(scale(cor(exprSet))
corrplot(scale(cor(exprSet)))
corrplot(scale(cor(exprSet)))
corrplot(scale(cor(log2(exprSet+1))))
pheatmap(cor(exprSet))
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 2,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'black',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'white',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
corrplot(scale(cor(exprSet)),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
#或者加载公用数据
library(airway)
data("airway")
str(airway)
airway@assays
View(airway)
airway
?RangedSummarizedExperiment
exprSet <- assay(airway)
View(exprSet)
#样本相关性
library(corrplot)
corrplot(cor(exprSet),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
head(exprSet)
log2(0)
log2(-999999999999999999)
log2(-100000000)
log2(.00000000000000000000000000001)
log2(13333311111111111111111111111111111111)
#未进行均一化，如下：
res <- cor(log2(exprSet+1))
res
data("airway")
airway
exprSet <- assay(airway)
#未进行均一化，如下：
res <- cor(log2(exprSet+1))
corrplot(res,
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
pheatmap(res,col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
corrplot(scale(res),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(res,
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
pheatmap(res,col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
install.packages(c("ape", "BiocManager", "broom", "broom.mixed", "carData", "caret", "cli", "data.table", "ddalpha", "dendextend", "devtools", "digest", "dimRed", "dplyr", "emmeans", "esquisse", "evaluate", "fansi", "ggplot2", "ggpubr", "ggridges", "ggstatsplot", "haven", "htmlwidgets", "httr", "ipred", "jmv", "jmvcore", "jsonlite", "knitr", "later", "lattice", "lava", "lme4", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "ModelMetrics", "nloptr", "openssl", "plotrix", "prediction", "processx", "ps", "psych", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "recipes", "remotes", "reshape", "rio", "RJSONIO", "rlang", "robustbase", "rstudioapi", "rvcheck", "scico", "sfsmisc", "shiny", "shinyWidgets", "sjlabelled", "sjmisc", "sjstats", "snow", "stringi", "survival", "tidyr", "tidyselect", "tidytree", "TMB", "tweenr", "units", "webshot", "xtable"))
#get genes in significant pathways or specific pathways
load('kegg_result.Rdata')
kk
class(kk)
?enrichResult
View(kk@result)
tmp <- kk@result[kk@result$p.adjust<0.05,]
tmp
View(tmp)
colnames(tmp)
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=-1*log10(qvalue)))+
scale_colour_gradient(low="green",high="red")+
labs( color=expression(-log[10](qvalue)),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+ theme( axis.text.y = element_text(size = rel(1.3)),
axis.title.x = element_text(size=rel(1.3)), axis.title.y = element_blank() )
library(ggplot2)
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=-1*log10(qvalue)))+
scale_colour_gradient(low="green",high="red")+
labs( color=expression(-log[10](qvalue)),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+ theme( axis.text.y = element_text(size = rel(1.3)),
axis.title.x = element_text(size=rel(1.3)), axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=-1*log10(qvalue)))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(-log[10](qvalue)),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+ theme( axis.text.y = element_text(size = rel(1.3)),
axis.title.x = element_text(size=rel(1.3)), axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(qvalue),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+ theme( axis.text.y = element_text(size = rel(1.3)),
axis.title.x = element_text(size=rel(1.3)), axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(qvalue),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+ theme(axis.text.y = element_text(size = rel(1.3)),
axis.title.x = element_text(size=rel(2.3)), axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(qvalue),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+ theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)), axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(qvalue),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)),
axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(qvalue),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_minimal()+
theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)),
axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(qvalue),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+
theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)),
axis.title.y = element_blank() )
#or plot using ggplot2
tmp <- kk@result[kk@result$qvalue<0.01,]
library(ggplot2)
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
scale_x_continuous()+
labs( color=expression(qvalue),
x="Gene Ratio",y="Pathway name", title="Pathway enrichment")+
theme_bw()+
theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)),
axis.title.y = element_blank() )
range(tmp$GeneRatio)
str(tmp)
tmp$GeneRatio <- as.numeric(tmp$GeneRatio)
#or plot using ggplot2
tmp <- kk@result[kk@result$qvalue<0.01,]
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
scale_x_continuous()+
labs( color=expression(qvalue), x="Gene Ratio",
y="Pathway name", title="Pathway enrichment")+
theme_bw()+
theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)),
axis.title.y = element_blank() )
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
labs( color=expression(qvalue), x="Gene Ratio",
y="Pathway name", title="Pathway enrichment")+
theme_bw()+
theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)),
axis.title.y = element_blank() )
str(tmp)
tmp[1,3]
tmp[1,3]%>%str_split(pattern = '/')
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(pathview)
library(stringr)
library(dplyr)
library(DOSE)
library(ggplot2)
library(magrittr)
tmp[1,3]%>%str_split(pattern = '/')
tmp[1,3]%>%str_split(pattern = '/')%>%unlist()
tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%divide_by()
tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%divide_by()
tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()%>%divide_by()
class(tmp[1,3]%>%str_split(pattern = '/')%>%unlist())
class(tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric())
tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()
class(tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric())
str(tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric())
tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()%>%divide_by()
a <- tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()
divide_by(a)
a
divide_by(a[1],a[2])
a <- tmp[1,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()%>%divide_by([1],[2])
library(magrittr)
nrow(tmp)
tmp
c <- vector()
c
tmp <- kk@result[kk@result$qvalue<0.01,]
Char2Num <- function(i) {
tmp1 <- tmp[i,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()
tmp2 <- divide_by(a[1],a[2])
return(b)
}
tmp3 <- vector()
for (i in 1:nrow(tmp)) {
tmp4 <- Char2Num(i)
tmp3 <- c(tmp3,tmp4)
}
tmp <- kk@result[kk@result$qvalue<0.01,]
Char2Num <- function(i) {
tmp1 <- tmp[i,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()
tmp2 <- divide_by(a[1],a[2])
return(tmp2)
}
tmp3 <- vector()
for (i in 1:nrow(tmp)) {
tmp4 <- Char2Num(i)
tmp3 <- c(tmp3,tmp4)
}
tmp3
tmp1 <- tmp[2,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()
tmp <- kk@result[kk@result$qvalue<0.01,]
Char2Num <- function(i) {
tmp1 <- tmp[2,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()
tmp2 <- divide_by(tmp1[1],tmp1[2])
return(tmp2)
}
tmp3 <- vector()
for (i in 1:nrow(tmp)) {
tmp4 <- Char2Num(i)
tmp3 <- c(tmp3,tmp4)
}
tmp3
tmp <- kk@result[kk@result$qvalue<0.01,]
Char2Num <- function(i) {
tmp1 <- tmp[i,3]%>%str_split(pattern = '/')%>%unlist()%>%as.numeric()
tmp2 <- divide_by(tmp1[1],tmp1[2])
return(tmp2)
}
tmp3 <- vector()
for (i in 1:nrow(tmp)) {
tmp4 <- Char2Num(i)
tmp3 <- c(tmp3,tmp4)
}
tmp3
36/540
42//540
42/540
str(tmp3)
tmp$GeneRatio <- tmp3
str(tmp)
#将generatio由字符转化为数值
head(tmp)
#将generatio由字符转化为数值
str(tmp)
ggplot(tmp,aes(x=GeneRatio,y=Description))+
geom_point(aes(size=Count,color=qvalue))+
scale_colour_gradient(low="blue",high="red")+
scale_x_continuous()+
labs( color=expression(qvalue), x="Gene Ratio",
y="Pathway name", title="Pathway enrichment")+
theme_bw()+
theme(axis.text.y = element_text(size = rel(1)),
axis.title.x = element_text(size=rel(1)),
axis.title.y = element_blank() )
read.csv('interested pathways_genes_DQC.csv')
data <- read.csv('interested pathways_genes_DQC.csv')
View(data)
write.table(data$Other.Gene.ID,'gene_DQC.txt',quote = F,sep = '\t',
row.names = F,col.names = F)
data <- read.csv('interested pathways_genes_DQC.csv')
write.table(data$Other.Gene.ID,'gene_DQC.txt',quote = F,sep = '\t',
row.names = F,col.names = F)
data <- read.csv('gene_PPI_input.txt')
upgene_in_FK <- read.csv('up_genes_in_FK.csv')
View(upgene_in_FK)
write.table(upgene_in_FK$Other.Gene.ID,'up_genes_in_FK.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
write.table(upgene_in_FK$Gene.ID,'up_genes_in_FK.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
upgene_in_FK <- read.csv('PPI_input_up_in_HN')
upgene_in_FK <- read.csv('PPI_input_up_in_HN.csv')
data <- read.csv('PPI_input_up_in_HN.csv')
write.table(data$ï..Gene.ID,'up_genes_in_FK.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
data <- read.csv('PPI_input_down_in_HN.csv')
write.table(data$ï..Gene.ID,'up_genes_in_FK.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
write.table(data$ï..Gene.ID,'PPI_input_down_in_HN.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
data <- read.csv('PPI_input_down_HN.csv')
write.table(data$ï..Gene.ID,'PPI_input_down_HN.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
data <- read.csv('PPI_inpu_up_HN.csv')
write.table(data$ï..Gene.ID,'PPI_inpu_up_HN.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
data <- read.csv('PPI_input_down_HN.csv')
write.table(data$ï..Gene.ID,'PPI_input_down_HN.csv',
quote = F,sep = '\t',col.names = F,row.names = F)
data <- read.csv('up.csv')
View(data)

fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","FF3333"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","#FF3333"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","#FF3333"))(10),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","#FF3333"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","#FF3333"))(1000),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","#FF3333"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","#EE4000	"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3333FF","white","#EE4000"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#1E90FF","white","#EE4000"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#1E90FF","white","#EE9572"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#C6E2FF","white","#EE9572"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#87CEFF","white","#EE9572"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#87CEFF","white","#EE4000"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#87CEFF","white","#FFA500"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#87CEFF","white","#FF9933"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#87CEFF","white","#FF3333"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#87CEFF","white","#FF9999"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("blue","white","red"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
library(corrplot)
corrplot(res$r,type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(res$r,col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
symnum(res$r)
pdf('Correlation_plot.pdf')
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
dev.off()
dev.off()
pdf('Correlation_plot.pdf')
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
dev.off()
pdf('Correlation_plot.pdf')
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = F,cluster_cols=F,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
library(corrplot)
corrplot(res$r,col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
print(symnum(res$r))
dev.off()
print(symnum(res$r))
symnum(res$r)
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation',
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
data <- read.csv('all.csv')
data <- data[,2:11]
library(Hmisc)
res <- rcorr(as.matrix(data))
pdf('Correlation_plot',onefile = T)
library(pheatmap)
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation',
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
library(corrplot)
corrplot(res$r,col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
symnum(res$r)
dev.off()
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation',treeheight_row = 80,treeheight_col = 80,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
pdf('Correlation_plot',onefile = T)
library(pheatmap)
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation',
treeheight_row = 80,treeheight_col = 80,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
library(corrplot)
corrplot(res$r,col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
symnum(res$r)
dev.off()
pdf('Correlation_plot.pdf',onefile = T)
library(pheatmap)
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation',
treeheight_row = 80,treeheight_col = 80,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
library(corrplot)
corrplot(res$r,col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
symnum(res$r)
dev.off()
dev.off()
pdf('Correlation_plot.pdf',onefile = T)
library(pheatmap)
pheatmap(res$r,
col = colorRampPalette(c("#3399FF","white","red"))(100),
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = 'correlation',clustering_distance_cols = 'correlation',
treeheight_row = 80,treeheight_col = 80,
display_numbers = T,number_color = 'black',fontsize_number = 10,
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 10,
fontsize_row = 10,fontsize = 10,
main = 'Correlation')
library(corrplot)
corrplot(res$r,col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
symnum(res$r)
dev.off()
library(DESeq2)
data <- read.csv('all.csv')
View(data)
colnames(data)
data <- data[,2:11]
#set group and create dds
condition<-factor(c(rep("FK",5),rep("HN",5)))
condition
coldata<-data.frame(condition,row.names = colnames(data))
coldata
dds<-DESeqDataSetFromMatrix(countData=data, colData=coldata, design=~condition)
data <- round(data)
head(data)
dds<-DESeqDataSetFromMatrix(countData=data, colData=coldata, design=~condition)
#使用DESeq函数进行估计离散度，然后进行标准的差异表达分析，得到res对象结果
dds <- DESeq(dds)
res <- results(dds)
#最后设定阈值，筛选差异基因，导出数据
table(res$padj <0.05)
res <- res[order(res$padj),]
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
condition
write.table(resdata,file = "FK_vs_HN.csv",quote = F,sep = "\t",col.names = T,row.names = F)
write.table(resdata,file = "FK_vs_HN_DESeq2.csv",quote = F,sep = "\t",col.names = T,row.names = F)
write.table(resdata,file = "FK_vs_HN_DESeq2.csv",quote = F,sep = "\t",col.names = T,row.names = T)
coldata
dds
str(dds)
head(data)
data <- read.csv('all.csv')
colnames(data)
str(data)
View(data)
data <- read.csv('all.csv')
colnames(data)
rownames(data) <- data$Other.Gene.ID
data <- data[,2:11]
data <- round(data)#数据readcount是RSEM定量的结果，并不是常见的htseq-count的结果，
head(data)
#设置分组信息以及构建dds对象
condition<-factor(c(rep("FK",5),rep("HN",5)))
coldata<-data.frame(condition,row.names = colnames(data))
dds<-DESeqDataSetFromMatrix(countData=data, colData=coldata, design=~condition)
#使用DESeq函数进行估计离散度，然后进行标准的差异表达分析，得到res对象结果
dds <- DESeq(dds)
res <- results(dds)
#最后设定阈值，筛选差异基因，导出数据
table(res$padj <0.05)
res <- res[order(res$padj),]
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
write.table(resdata,file = "FK_vs_HN_DESeq2.csv",quote = F,sep = "\t",
col.names = T,row.names = F)
test <- read.csv('DEG.csv')
head(test)
colnames(test)
colnames(resdata)
head(resdata)
a <- merge(resdata,test,by.x = 'Row.names', by.y = 'Other.Gene.ID',all=F)
View(a)
b <- as.character(resdata$Row.names)
b
c <- as.character(test$Other.Gene.ID)
setdiff(b,c)
setdiff(c,b)
my_res <- as.character(resdata$Row.names)
BGI_DEG <- read.csv('DEG.csv')
head(BGI_DEG)
tmp <- merge(resdata,test,by.x = 'Row.names', by.y = 'Other.Gene.ID',all=F)
my_res <- as.character(resdata$Row.names)
BGI_res <- as.character(BGI_DEG$Other.Gene.ID)
setdiff(my_res,BGI_res)
setdiff(BGI_res,my_res)
head(resdata)
resdata <- resdata[abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.001,]
my_res <- as.character(resdata$Row.names)
BGI_res <- as.character(BGI_DEG$Other.Gene.ID)
setdiff(my_res,BGI_res)
setdiff(BGI_res,my_res)
range(BGI_DEG$log2.HN.FK.)
isTRUE(0.5 %in% BGI_DEG$log2.HN.FK.)
BGI_DEG <- BGI_DEG[abs(BGI_DEG$log2FoldChange)>=2 & BGI_DEG$Qvalue.FK.vs.HN.<=0.001,]
str(BGI_DEG)
BGI_DEG <- BGI_DEG[abs(BGI_DEG$log2FoldChange)>=2 & BGI_DEG$Qvalue.FK.vs.HN.<=0.001,]
BGI_DEG <- BGI_DEG[abs(BGI_DEG$log2.HN.FK.)>=2 & BGI_DEG$Qvalue.FK.vs.HN.<=0.001,]
BGI_DEG <- read.csv('DEG.csv')
BGI_DEG <- BGI_DEG[abs(BGI_DEG$log2.HN.FK.)>=2 & BGI_DEG$Qvalue.FK.vs.HN.<=0.001,]
head(BGI_DEG)
resdata <- resdata[abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.001,]
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
head(resdata)
resdata <- resdata[abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.001,]
my_res <- as.character(resdata$Row.names)
BGI_res <- as.character(BGI_DEG$Other.Gene.ID)
setdiff(my_res,BGI_res)
setdiff(BGI_res,my_res)
setdiff(my_res,BGI_res)
setdiff(BGI_res,my_res)
nrow(BGI_res)
View(tmp)
library(DESeq2)
data <- read.csv('all.csv')
colnames(data)
rownames(data) <- data$Other.Gene.ID
data <- data[,2:11]
data <- round(data)#数据readcount是RSEM定量的结果，并不是常见的htseq-count的结果，
#所以count值会有小数点，而DESeq2包不支持count数有小数点，所以这里需要round取整
#设置分组信息以及构建dds对象
condition<-factor(c(rep("FK",5),rep("HN",5)))
coldata<-data.frame(condition,row.names = colnames(data))
dds<-DESeqDataSetFromMatrix(countData=data, colData=coldata, design=~condition)
#使用DESeq函数进行估计离散度，然后进行标准的差异表达分析，得到res对象结果
dds <- DESeq(dds)
res <- results(dds)
#最后设定阈值，筛选差异基因，导出数据
table(res$padj <0.05)
res <- res[order(res$padj),]
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
write.table(resdata,file = "FK_vs_HN_DESeq2.csv",quote = F,sep = "\t",
col.names = T,row.names = F)
resdata <- resdata[abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.001,]
BGI_DEG <- read.csv('DEG.csv')
BGI_DEG <- BGI_DEG[abs(BGI_DEG$log2.HN.FK.)>=2 & BGI_DEG$Qvalue.FK.vs.HN.<=0.001,]
head(BGI_DEG)
tmp <- merge(resdata,test,by.x = 'Row.names', by.y = 'Other.Gene.ID',all=F)
my_res <- as.character(resdata$Row.names)
BGI_res <- as.character(BGI_DEG$Other.Gene.ID)
setdiff(my_res,BGI_res)
setdiff(BGI_res,my_res)
BGI_DEG <- BGI_DEG[order(BGI_DEG$log2.HN.FK.),]
resdata <- resdata[order(resdata$log2FoldChange),]
head(BGI_DEG)
head(resdata)
View(BGI_DEG)
View(resdata)
View(resdata)
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
View(resdata)
View(resdata)
resdata <- resdata[abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.001,]
View(resdata)
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
resdata <- subset(x = resdata,subset=abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.001)
View(resdata)
resdata <- resdata[abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.05,]
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
resdata <- resdata[abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.05,]
resdata <- merge(as.data.frame(res), as.data.frame(counts(dds, normalized=TRUE)),
by="row.names",sort=FALSE)
resdata <- subset(x = resdata,subset=abs(resdata$log2FoldChange)>=2 & resdata$padj<=0.05)
View(resdata)
BGI_DEG <- read.csv('DEG.csv')
BGI_DEG <- BGI_DEG[abs(BGI_DEG$log2.HN.FK.)>=2 & BGI_DEG$Qvalue.FK.vs.HN.<=0.05,]
my_res <- as.character(resdata$Row.names)
BGI_res <- as.character(BGI_DEG$Other.Gene.ID)
setdiff(my_res,BGI_res)
setdiff(BGI_res,my_res)
BGI_DEG <- BGI_DEG[order(BGI_DEG$log2.HN.FK.),]
resdata <- resdata[order(resdata$log2FoldChange),]
head(BGI_DEG)
head(resdata)
View(BGI_DEG)
View(resdata)

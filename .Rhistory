barplot(ego3)
dotplot(ego3)
head(ego3)
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
index <- grep('BGI',upgenes$ï..Gene.ID)#Filter our BGI novel genes.
upgenes <- upgenes[-index,]
#GO analysis
#GO classification/GoupGO 分析
entr_up <- as.vector(upgenes$ï..Gene.ID)
#GO over-representation test/enrichGO 分析
index <- grep('BGI',background_all$ï..Gene.ID)
background_all <- background_all[-index,]#filter out BGI_novel genes.
entr_bg <- as.vector(background_all$ï..Gene.ID)
head(entr_bg)
#kegg
search_kegg_organism('ece', by='kegg_code')
#kegg
search_kegg_organism('hsa', by='kegg_code')
#kegg
hsa <- search_kegg_organism('hsa', by='kegg_code')
str(hsa)
hsa
#kegg
keytypes(org.Hs.eg.db)
#kegg
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.05,universe = entr_bg)
head(kk)
#kegg
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.05,pAdjustMethod = 0.05,
universe = entr_bg)
#kegg
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.05,qvalueCutoff = 0.05,
universe = entr_bg)
head(kk)
View(kk)
#plot
barplot(kk,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
kk
head(kk)
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(kk,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(kk, showCategory = 20,title=paste0("enrichGo_",'BP'))
geneList <- background_all$log2.HN.FK.
View(background)
View(background_all)
background_DEG <- read.csv('DEG.csv')
background_all <- read.csv('all.csv')
attach(background_DEG)
upgenes <- background_DEG[FK.FPKM>=1&HN.FPKM>=1&log2.HN.FK.>=2&Qvalue.FK.vs.HN.<0.01,]
downgenes <- background_DEG[FK.FPKM>=1&HN.FPKM>=1&log2.HN.FK.<=-2&Qvalue.FK.vs.HN.<0.01,]
detach(background_DEG)
save(background_DEG,upgenes,downgenes,background_all,file = 'Data.Rdata')
# Fri Nov 16 15:44:08 2018 ------------------------------
rm(ls=list())
# Fri Nov 16 15:44:08 2018 ------------------------------
rm(list=ls())
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
index <- grep('BGI',upgenes$ï..Gene.ID)#Filter our BGI novel genes.
upgenes <- upgenes[-index,]
#GO analysis
#GO classification/GoupGO 分析
entr_up <- as.vector(upgenes$ï..Gene.ID)
#GO over-representation test/enrichGO 分析
index <- grep('BGI',background_all$ï..Gene.ID)
background_all <- background_all[-index,]#filter out BGI_novel genes.
rm(list=ls())
load('Data.Rdata')
index <- grep('BGI',upgenes$ï..Gene.ID)#Filter our BGI novel genes.
upgenes <- upgenes[-index,]
index <- grep('BGI',background_all$ï..Gene.ID)
background_all <- background_all[-index,]#filter out BGI_novel genes.
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
#GO analysis
#GO classification/GoupGO 分析
entr_up <- as.vector(upgenes$ï..Gene.ID)
#GO over-representation test/enrichGO 分析
entr_bg <- as.vector(background_all$ï..Gene.ID)
index <- grep('BGI',background_DEG$ï..Gene.ID)
background_DEG <- background_DEG[-index,]
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
ego3 <- gseGO(geneList     = geneList,
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
dotplot(ego3)
head(ego3)
dotplot(ego3,drop=T,showCategory = 20)
dotplot(ego3,showCategory = 20)
#KEGG Gene Set Enrichment Analysis
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
#KEGG Gene Set Enrichment Analysis
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
kk2 <- gseKEGG(geneList     = geneList,organism = 'hsa',
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,
pvalueCutoff = 0.05,
verbose      = FALSE,
use_internal_data = F)
kk2 <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,
pvalueCutoff = 0.05,
verbose      = FALSE,
use_internal_data = F)
kk2 <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,maxGSSize = 500,
pvalueCutoff = 0.05,
verbose      = FALSE,
use_internal_data = F)
dotplot(kk2,showCategory=20)
barplot(ego3,showCategory = 20,drop=T)
barplot(ego3,showCategory = 20)
barplot(ego3,showCategory = 20)
dotplot(ego3,showCategory = 20)
dotplot(kk2,showCategory=20)
barplot(kk2,showCategory=20)
#KEGG Module over-representation test
mkk <- enrichMKEGG(gene = entr_up,
organism = 'hsa',pvalueCutoff = 0.05,
universe = entr_bg,minGSSize = 10,maxGSSize = 500,qvalueCutoff = 0.05)
dotplot(mkk,showCategory=20)
dotplot(mkk,showCategory=20)
#KEGG Module Gene Set Enrichment Analysis
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
mkk2 <- gseMKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,maxGSSize = 500,
pvalueCutoff = 0.05,
verbose      = FALSE,
use_internal_data = F)
mkk2 <- gseMKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,maxGSSize = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
dotplot(mkk2,showCategory=20)
str(mkk2)
plot(mkk2)
dotplot(mkk2,showCategory=20)
barplot(mkk2,showCategory=20)
a <- enrichDAVID(gene = entr_up,universe = entr_bg,pvalueCutoff = 0.05)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("DOSE", version = "3.8")
library(DOSE)
library(DOSE)
remove.packages("DOSE")
library(DOSE)
library(clusterProfiler)
goplot(ego)
ego <- enrichGO(gene = entr_up,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.01,
readable = T,universe = entr_bg)#background genes: use all gene. Don't use DEGs only.
head(ego)
goplot(ego)
goplot(ego2)
ego2 <- gofilter(ego,level = 3)#remove specific GO terms or GO level (in ca
goplot(ego2)
head(ego2)
head(ego)
goplot(ego)
goplot(ego2)
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego2, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
goplot(ego2)
goplot(ego)
goplot(ego,showCategory = 20)
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego, showCategory = 10,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=10,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
goplot(ego,showCategory = 10)
goplot(ego,showCategory = 5)
dotplot(ego3,showCategory = 20)
gseaplot(kk2, geneSetID = "hsa04145")
gseaplot(ego3, geneSetID = "hsa04145")
dotplot(ego3,showCategory = 20)
gseaplot(ego3, geneSetID = "hsa04145")
dotplot(kk2,showCategory=20)
gseaplot(kk2, geneSetID = "hsa04145")
kk2
kk2@geneSets
head(kk2)
head(kk2,100)
genesetID <- kk2@
gseaplot(kk2, geneSetID = "hsa04145")
genesetID <- kk2@geneSets
View(genesetID)
str(genesetID)
names(genesetID)
colnames(genesetID)
rownames(genesetID)
genesetID <- names(kk2@geneSets)
View(kk2)
gseaplot(kk2, geneSetID = genesetID[1])
genesetID[1]
genesetID[2]
gseaplot(kk2, geneSetID = genesetID[2])
dotplot(kk2,showCategory=20)
par(mfrow=c(3,3))
par(mfrow=c(3,3))
for (i in 1:9) {
gseaplot(kk2, geneSetID = genesetID[i])
}
par(mfrow=c(3,3))
for (i in 1:9) {
tmp <- gseaplot(kk2, geneSetID = genesetID[i])
print(tmp)
}
tmp <- gseaplot(kk2, geneSetID = genesetID[1])
print(tmp)
for (i in 1:9) {
tmp <- gseaplot(kk2, geneSetID = genesetID[1])
print(tmp)
}
par(mfrow=c(3,3))
for (i in 1:9) {
tmp <- gseaplot(kk2, geneSetID = genesetID[1])
print(tmp)
}
rm(i)
1:9
par(mfrow=c(3,3))
for (i in 1:9) {
tmp <- gseaplot(kk2, geneSetID = genesetID[i])
print(tmp)
}
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
tmp <- gseaplot(kk2, geneSetID = genesetID[i])
print(tmp)
}
dev.off()
genesetID[1]
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("clusterProfiler", version = "3.8")
genesetID[2]
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
name <- genesetID[i]
tmp <- gseaplot(kk2, geneSetID = genesetID[i],title=name)
print(tmp)
}
dev.off()
rm(list=ls())
load('Data.Rdata')
index <- grep('BGI',upgenes$ï..Gene.ID)#Filter our BGI novel genes.
upgenes <- upgenes[-index,]
index <- grep('BGI',background_all$ï..Gene.ID)
background_all <- background_all[-index,]#filter out BGI_novel genes.
index <- grep('BGI',background_DEG$ï..Gene.ID)
background_DEG <- background_DEG[-index,]
entr_up <- as.vector(upgenes$ï..Gene.ID)
entr_bg <- as.vector(background_all$ï..Gene.ID)
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
kk2 <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,maxGSSize = 500,
pvalueCutoff = 0.05,
verbose      = FALSE,
use_internal_data = F)
dotplot(kk2,showCategory=20)
genesetID <- names(kk2@geneSets)
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
name <- genesetID[i]
tmp <- gseaplot(kk2, geneSetID = genesetID[i],title=name)
print(tmp)
genesetID <- names(kk2@geneSets)
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
name <- genesetID[i]
tmp <- gseaplot(kk2, geneSetID = genesetID[i],title=name)
print(tmp)
dotplot(kk2,showCategory=20)
dotplot(kk2,showCategory=20,color = "p.adjust")
dotplot(kk2,showCategory=20,color = "Count")
dotplot(kk2,showCategory=20,color = "p.adjust")
dotplot(kk2,showCategory=20,color = "qvalue")
dotplot(kk2,showCategory=20,color = "pvalue")
dotplot(kk2,showCategory=20,color = "p.adjust")
genesetID <- names(kk2@geneSets)
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
tmp <- gseaplot(kk2, geneSetID = genesetID[i],title=genesetID[i])
print(tmp)
}
dev.off()
dev.off()
dev.off()
dev.off()
kk2@result
name <- kk2@result$Description
name
name[1]
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
tmp <- gseaplot(kk2, geneSetID = names(kk2@geneSets)[i],title=kk2@result$Description[i])
print(tmp)
}
dev.off()
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
tmp <- gseaplot(kk2, geneSetID = names(kk2@geneSets)[i],
title=paste(names(kk2@geneSets)[i],kk2@result$Description[i],sep = '_'))
print(tmp)
}
dev.off()
head(kk2,30)
dotplot(kk2,showCategory=20)
kk2@result$ID
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
tmp <- gseaplot(kk2, geneSetID = kk2@result$ID[i],
title=paste(kk2@result$ID,kk2@result$Description[i],sep = '_'))
print(tmp)
}
dev.off()
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
tmp <- gseaplot(kk2, geneSetID = kk2@result$ID[i],
title=paste(kk2@result$ID,kk2@result$Description[i],sep = '_'))
print(tmp)
}
dev.off()
#kegg over-representation test
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.05,qvalueCutoff = 0.05,
universe = entr_bg)
head(kk)
#plot
barplot(kk,drop=T,showCategory = 20)
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
barplot(kk,drop=T,showCategory = 20)
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
kk <- setReadable(kk,OrgDb = org.Hs.eg.db)
kk
keytypes(org.Hs.eg.db)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)
kk
barplot(kk,drop=T,showCategory = 20)
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
#browseKEGG
browseKEGG(kk, 'hsa04110')
kk2 <- gseKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,maxGSSize = 500,
pvalueCutoff = 0.05,
verbose      = FALSE,
use_internal_data = F)
kk2
kk2 <- setReadable(kk2,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)
dotplot(kk2,showCategory=20)
#browseKEGG
browseKEGG(kk, 'hsa04110')
#browseKEGG
name_kk <- kk@result$ID
name_kk
browseKEGG(kk, name_kk[1])
browseKEGG(kk, name_kk[2])
library("pathview")
library(pathview)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("pathview", version = "3.8")
library(pathview)
#or use pathview
hsa04110 <- pathview(gene.data  = entr_up,
pathway.id = "hsa04970",
species    = "hsa",
limit      = list(gene=max(abs(entr_up)), cpd=1))
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
#or use pathview
hsa04110 <- pathview(gene.data  = geneList,
pathway.id = "hsa04110",
species    = "hsa",
limit      = list(gene=max(abs(geneList)), cpd=1))
name_kk
#or use pathview
hsa04110 <- pathview(gene.data  = geneList,
pathway.id = "hsa04970",
species    = "hsa",
limit      = list(gene=max(abs(geneList)), cpd=1))
for (i in 1:20) {
hsa04110 <- pathview(gene.data  = geneList,
pathway.id = name_kk[i],
species    = "hsa",
limit      = list(gene=max(abs(geneList)), cpd=1))
}
pdf('Kegg_plot.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20)
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
dotplot(kk2,showCategory=20)
#KEGG Module over-representation test
mkk <- enrichMKEGG(gene = entr_up,
organism = 'hsa',pvalueCutoff = 0.05,
universe = entr_bg,minGSSize = 10,maxGSSize = 500,qvalueCutoff = 0.05)
dotplot(mkk,showCategory=20)
#KEGG Module Gene Set Enrichment Analysis
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
mkk2 <- gseMKEGG(geneList     = geneList,
organism     = 'hsa',
nPerm        = 1000,
minGSSize    = 10,maxGSSize = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
gseaplot(ego3, geneSetID = "hsa04145")
browseKEGG(kk, name_kk[2])
#use pathview to see gene changes in pathway
name_kk2 <- kk2@result$ID
name_kk2
name_kk2 <- kk2@result$ID
for (i in 1:20) {
hsa04110 <- pathview(gene.data  = geneList,
pathway.id = name_kk2[i],
species    = "hsa",
limit      = list(gene=max(abs(geneList)), cpd=1))
}
geneList <- background_all$log2.HN.FK.
names(geneList) <- as.character(background_all$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
ego3 <- gseGO(geneList     = geneList,
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
dotplot(ego3,showCategory = 20)
ego3 <- setReadable(ego3,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)
pdf(file = 'GO_GSEA.pdf',width = 10,onefile = T)
for (i in 1:20) {
tmp <- gseaplot(ego3, geneSetID = ego3@result$ID[i],
title=paste(ego3@result$ID,ego3@result$Description[i],sep = '_'))
print(tmp)
}
dev.off()
dotplot(ego3,showCategory = 20)
#GSEA plot
pdf(file = 'GO_GSEA.pdf',width = 10,onefile = T)
dotplot(ego3,showCategory = 20)
for (i in 1:20) {
tmp <- gseaplot(ego3, geneSetID = ego3@result$ID[i],
title=paste(ego3@result$ID,ego3@result$Description[i],sep = '_'))
print(tmp)
}
dev.off()
pdf(file = 'Kegg_GSEA.pdf',width = 10,onefile = T)
dotplot(kk2,showCategory=20)
for (i in 1:20) {
tmp <- gseaplot(kk2, geneSetID = kk2@result$ID[i],
title=paste(kk2@result$ID,kk2@result$Description[i],sep = '_'))
print(tmp)
}
dev.off()

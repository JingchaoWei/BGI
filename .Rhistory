entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),
OrgDb = 'org.Hs.eg.db')
head(entr_up)
#The ID type (both fromType & toType) should be one of ‘kegg’, ‘ncbi-geneid’, ‘ncbi-proteinid’ or
#‘uniprot’. The ‘kegg’ is the primary ID used in KEGG database. The data source of KEGG was from NCBI.
#A rule of thumb for the ‘kegg’ ID is entrez ID for eukaryote species and Locus ID for prokaryotes.
keg2np <- bitr_kegg(entr_up$ENTREZID,fromType = 'kegg',toType = 'ncbi-proteinid',organism = 'hsa')
head(keg2np)
#GO analysis
#GO classification
gene <- entr_up$ENTREZID
#GO over-representation test
entr_bg <- bitr(background_all$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
head(entr_bg)
View(entr_bg)
head(entr_bg)
#GO analysis
#GO classification
gene <- entr_up$ENTREZID
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg,readable = F)
barplot(ggo)
barplot(ggo,drop=T,showCategory=20)
barplot(ggo,drop=F,showCategory=20)
barplot(ggo,drop=T,showCategory=20)
barplot(ggo,drop=F,showCategory=20)
barplot(ggo,drop=T,showCategory=20)
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg,readable = T)
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
str(ego)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20)
dotplot(ggo)
dotplot(ego,title="enrichGo CC")
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20)
dotplot(ego,title="enrichGo")
par(mfrow=c(2,2))
par(mfrow=c(3,2))
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20)
dotplot(ego,title="enrichGo")
}
dev.off()
head(entr_bg)
pdf('enrichGO_plot.PDF',onefile = T)
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
a <- barplot(ego,drop=T,showCategory = 20)
b <- dotplot(ego,title="enrichGo")
print(a)
print(b)
}
dev.off()
str(geneList)
#GO over-representation test/enrichGO 分析
entr_bg <- bitr(background_DEG$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
barplot(ego,drop=T,showCategory = 20,title="enrichGo_")
dotplot(ego,title="enrichGo_")
enrichMap(ego, vertex.label.cex=1.2, layout=igraph::layout.kamada.kawai)
c <- emapplot(ego, vertex.label.cex=1.2, layout=igraph::layout.kamada.kawai)
str(ego)
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = kk'')
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk')
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(ego, showCategory = 20)
pdf('enrichGO_plot.PDF',width = 14,onefile = T)
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
a <- barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
b <- dotplot(ego,title=paste0("enrichGo_",i))
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
d <- cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
print(a)
print(b)
print(c)
print(d)
}
dev.off()
i <- 'BP'
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T)
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
#GO over-representation test/enrichGO 分析
entr_bg <- bitr(background_all$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T,universe = entr_bg$ENTREZID)
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
dotplot(ego,title=paste0("enrichGo_",i))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
dotplot(ego,title=paste0("enrichGo_",i))
dotplot(ego,showCategory = 30,title=paste0("enrichGo_",i))
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",i))
barplot(ego,drop=T,showCategory = 30,title=paste0("enrichGo_",i))
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
rm(i)
pdf('enrichGO_plot.PDF',width = 14,onefile = T)
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T,universe = entr_bg$ENTREZID)
head(as.data.frame(ego))
a <- barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
b <- dotplot(ego,showCategory = 20,title=paste0("enrichGo_",i))
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
d <- cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
print(a)
print(b)
print(c)
print(d)
}
dev.off()
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
#convert gene symbols to ENTREZID ID
keytypes(org.Hs.eg.db)
entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),
OrgDb = 'org.Hs.eg.db')
head(entr_up)
#GO analysis
#GO classification/GoupGO 分析
gene <- entr_up$ENTREZID
#GO over-representation test/enrichGO 分析
entr_bg <- bitr(background_all$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T,universe = entr_bg$ENTREZID)
str(ego)
ego@geneSets
str(ego@geneSets)
dropGO(x = ego,level = 3)
str(ego)
simplify(ego, cutoff = 0.7, by = "p.adjust",
select_fun = min)
simplify(ego, cutoff = 0.7, by = "p.adjust",
select_fun = min)
simplify(ego, cutoff = 0.7, by = "p.adjust",select_fun = min)
bp2 <- simplify(ego, cutoff=0.7, by="p.adjust", select_fun=min)
dropGO(ego,level = 1)
ego <- dropGO(ego,level = 1)
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",'BP'))
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T,universe = entr_bg$ENTREZID)
ego2 <- dropGO(ego,level = 1)
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
emapplot(ego2, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
ego2 <- dropGO(ego,level = 2)
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
ego2 <- dropGO(ego,level = 3)
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
ego2 <- gofilter(ego,level = 3)
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego2, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
emapplot(ego2, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
ego2 <- gofilter(ego,level = 1)
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
ego2 <- gofilter(ego,level = 2)
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
ego2 <- gofilter(ego,level = 3)
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 50,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",'BP'))
#GO GSEA
ego3 <- gseGO(geneList     = gene,
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 100,
maxGSSize    = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
gene
#GO GSEA
gene
#GO GSEA
str(gene)
#GO GSEA
#1st:
#prepare your own geneList
#https://github.com/GuangchuangYu/DOSE/wiki/how-to-prepare-your-own-geneList
geneList <- upgenes$log2.HN.FK.
head(entr_up)
head(upgenes)
upgenes[200,]
entr_up[200,]
names(geneList) <- as.character(upgenes$Other.Gene.ID)
geneList <- sort(geneList,decreasing = T)
geneList
str(geneList)
keytypes(org.Hs.eg.db)
ego3 <- gseGO(geneList     = gene,keyType = 'SYMBOL',
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 100,
maxGSSize    = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
ego3 <- gseGO(geneList     = geneList,keyType = 'SYMBOL',
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 100,
maxGSSize    = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
ego3 <- gseGO(geneList     = geneList,keyType = 'SYMBOL',
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 500,
pvalueCutoff = 0.05,
verbose      = FALSE)
str(geneList)
ego3 <- gseGO(geneList     = geneList,keyType = 'SYMBOL',
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 1000,
pvalueCutoff = 0.05,
verbose      = FALSE)
#GO GSEA
#1st:
#prepare your own geneList
#https://github.com/GuangchuangYu/DOSE/wiki/how-to-prepare-your-own-geneList
geneList <- upgenes$log2.HN.FK.
#GO GSEA
#1st:
#prepare your own geneList
#https://github.com/GuangchuangYu/DOSE/wiki/how-to-prepare-your-own-geneList
entr_up
user_id<-c(1,2,3,4)
u1<-c(2,3,4,1)
e1<-c('a1','a2','a3','a4')
m1<-data.frame(u1,e1)
m1
t1<-m1[match(user_id,m1$u1),]
t1
#GO GSEA
#1st:
#prepare your own geneList
#https://github.com/GuangchuangYu/DOSE/wiki/how-to-prepare-your-own-geneList
entr_up
head(entr_up)
head(upgenes)
#GO GSEA
#1st:
#prepare your own geneList
#https://github.com/GuangchuangYu/DOSE/wiki/how-to-prepare-your-own-geneList
head(entr_up)
head(upgenes)
#GO GSEA
#1st:
#prepare your own geneList
#https://github.com/GuangchuangYu/DOSE/wiki/how-to-prepare-your-own-geneList
head(entr_up)
logFC <- upgenes[match(entr_up$SYMBOL,upgenes$Other.Gene.ID),]
with_entrID <- upgenes[match(entr_up$SYMBOL,upgenes$Other.Gene.ID),]#filter out genes without entrezid
head(with_entrID)
geneList <- with_entrID$log2.HN.FK.
names(geneList) <- as.character(with_entrID$Other.Gene.ID)
with_entrID$entrezID <- entr_up$ENTREZID
head(with_entrID)
View(upgenes)
isTRUE(with_entrID$ï..Gene.ID==with_entrID$entrezID)
names(geneList) <- as.character(with_entrID$entrezID)
geneList <- with_entrID$log2.HN.FK.
names(geneList) <- as.character(with_entrID$entrezID)
geneList <- sort(geneList,decreasing = T)
ego3 <- gseGO(geneList     = geneList,
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 1000,
pvalueCutoff = 0.05,
verbose      = FALSE)
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
#GO analysis
#GO classification/GoupGO 分析
gene <- upgenes$ï..Gene.ID
gene
ggo <- groupGO(gene = gene,OrgDb = org.Hs.eg.db,ont = 'BP',level = 3,keyType = 'ENTREZID',readable = T)
library(stringr)
str_locate_all(upgenes,'BGI')
View(upgenes)
str_locate_all(upgenes$ï..Gene.ID,'BGI')
str_locate_all(upgenes$ï..Gene.ID,BGI)
grep('BGI',upgenes)
grep('BGI',upgenes$ï..Gene.ID)
#keytypes(org.Hs.eg.db)
entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),
OrgDb = 'org.Hs.eg.db')
length(grep('BGI',upgenes$ï..Gene.ID))
View(upgenes)
grep('BGI',upgenes$ï..Gene.ID)
index <- grep('BGI',upgenes$ï..Gene.ID)
upgenes <- upgenes[-index,]
View(upgenes)
length(unique(upgenes))
length(unique(upgenes$ï..Gene.ID))
index <- grep('BGI',upgenes$ï..Gene.ID)#Filter our BGI novel genes.
upgenes <- upgenes[-index,]
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
index <- grep('BGI',upgenes$ï..Gene.ID)#Filter our BGI novel genes.
upgenes <- upgenes[-index,]
#GO analysis
#GO classification/GoupGO 分析
gene <- upgenes$ï..Gene.ID
gene
ggo <- groupGO(gene = gene,OrgDb = org.Hs.eg.db,ont = 'BP',level = 3,keyType = 'ENTREZID',readable = T)
keytypes(org.Hs.eg.db)
View(background_all)
a <- bitr(geneID = gene,fromType = 'ENTREZID',toType = 'ENTREZID',OrgDb = org.Hs.eg.db)
a <- bitr(geneID = gene,fromType = 'ENTREZID',toType = 'ENTREZID',OrgDb = org.Hs.eg.db)
a <- bitr(geneID = gene,fromType = 'ENTREZID',toType = 'SYMBOL',OrgDb = org.Hs.eg.db)
a
View(a)
unique(a$SYMBOL)
#GO analysis
#GO classification/GoupGO 分析
gene <- upgenes$ï..Gene.ID
gene
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
#GO analysis
#GO classification/GoupGO 分析
gene <- upgenes$ï..Gene.ID
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
#GO analysis
#GO classification/GoupGO 分析
gene <- as.vector(upgenes$ï..Gene.ID)
ggo <- groupGO(gene = gene,OrgDb = org.Hs.eg.db,ont = 'BP',level = 3,keyType = 'ENTREZID',readable = T)
head(ggo)
barplot(ggo,drop=T,showCategory=20)
ggo <- groupGO(gene = gene,OrgDb = org.Hs.eg.db,ont = 'BP',level = 1,keyType = 'ENTREZID',readable = T)
barplot(ggo,drop=T,x = "GeneRatio",showCategory=20)
barplot(ggo,drop=T,showCategory=20)
ggo <- groupGO(gene = gene,OrgDb = org.Hs.eg.db,ont = 'BP',level = 3,keyType = 'ENTREZID',readable = T)
library(enrichplot)
barplot(ggo,drop=T,x = "GeneRatio",showCategory=20)
barplot(ggo,drop=T,x = "GeneRatio",showCategory=20,title='GO_group_GeneRatio')
barplot(ggo,drop=T,x = "GeneRatio",showCategory=20,title='GO_GeneRatio')
barplot(ggo,drop=T,x = "GeneRatio",showCategory=20,title='GO_GeneRatio',xlab = 'Gene_Ratio')
#GO over-representation test/enrichGO 分析
index <- grep('BGI',background_all$ï..Gene.ID)
background_all <- background_all[-index,]
entr_bg <- as.vector(background_all$ï..Gene.ID)
head(entr_bg)
#GO analysis
#GO classification/GoupGO 分析
entr_up <- as.vector(upgenes$ï..Gene.ID)
#GO analysis
#GO classification/GoupGO 分析
entr_up <- as.vector(upgenes$ï..Gene.ID)
ego <- enrichGO(gene = entr_up,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T,universe = entr_bg)#background genes: use all gene. Don't use DEGs only.
str(ego)
head(ego)
nrow(ego)
ego <- enrichGO(gene = entr_up,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.01,
readable = T,universe = entr_bg)#background genes: use all gene. Don't use DEGs only.
nrow(ego)
#plot
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
#plot
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",'BP'))
ego
ego@geneSets
ego@gene
ego@gene2Symbol
head(ego)
ego2 <- gofilter(ego,level = 3)#remove specific GO terms or GO level (in case of redundance)
barplot(ego2,drop=T,showCategory = 20,title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego2, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
dotplot(ego2,showCategory = 20,title=paste0("enrichGo_",'BP'))
emapplot(ego2, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",'BP'))
cnetplot(ego2, showCategory = 20,title=paste0("enrichGo_",'BP'))
pdf('enrichGO_plot.PDF',width = 14,onefile = T)
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = entr_up,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.01,
readable = T,universe = entr_bg)
a <- barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
b <- dotplot(ego,showCategory = 20,title=paste0("enrichGo_",i))
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
d <- cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
print(a)
print(b)
print(c)
print(d)
}
dev.off()
geneList <- upgenes$ï..Gene.ID
geneList <- upgenes$log2.HN.FK.
names(geneList) <- as.character(upgenes$ï..Gene.ID)
geneList <- sort(geneList,decreasing = T)
ego3 <- gseGO(geneList     = geneList,
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 1000,
pvalueCutoff = 0.05,
verbose      = FALSE)
ego3 <- gseGO(geneList     = geneList,
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 1000,
pvalueCutoff = 0.5,
verbose      = FALSE)
ego3 <- gseGO(geneList     = geneList,
OrgDb        = org.Hs.eg.db,
ont          = "BP",
nPerm        = 1000,
minGSSize    = 10,
maxGSSize    = 1000,
pvalueCutoff = 0.99,
verbose      = FALSE)
ego3
barplot(ego3)
dotplot(ego3)
head(ego3)

}
sig_genes <- vector()
for (i in 1:nrow(sig_genes_tmp)) {
tmp <- MySplit(i)
sig_genes <- c(sig_genes,tmp)
}
sig_genes <- unique(sig_genes)
cat(sig_genes,sep = '\n')#按行打印出来，可以直接复制到stringDB里面做蛋白相互作用
length(sig_genes)
head(result)
View(result)
result$Description
#or specify pathways that you are interested in:
result$Description
str(result)
result[,1:20]
result[,c(1:20)]
str(result)
result[,1:20]
result[1:20,]
result[1:20,1:3]
#or specify pathways that you are interested in:
result$Description
sig_genes_tmp <- result[,c(2,3,4,8,20)]
sig_genes_tmp <- result[c(2,3,4,8,20),]
sig_genes_tmp
MySplit <- function(i){
tmp <- sig_genes_tmp[i,'geneID'] %>% str_split(pattern = '/') %>% unlist(recursive = T)
return(tmp)
}
sig_genes <- vector()
for (i in 1:nrow(sig_genes_tmp)) {
tmp <- MySplit(i)
sig_genes <- c(sig_genes,tmp)
}
sig_genes <- unique(sig_genes)
length(sig_genes)
cat(sig_genes,sep = '\n')#按行打印出来，可以直接复制到stringDB里面做蛋白相互作用
write.table(sig_genes,'KEGG_sig_genes.txt',sep = '\n',quote = F,
col.names = F,row.names = F)
cat(result[c(2,3,4,8,20),])
result[c(2,3,4,8,20),]
save(kk,file = "kegg_result.Rdata")
#get genes in significant pathways or specific pathways
load('kegg_result.Rdata')
save(kk,name_kk,file = "kegg_result.Rdata")
#get genes in significant pathways or specific pathways
load('kegg_result.Rdata')
#get genes in significant pathways or specific pathways
load('kegg_result.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(pathview)
library(stringr)
library(dplyr)
library(DOSE)
library(ggplot2)
#browseKEGG
name_kk <- kk@result$ID
for (i in 1:20) {
browseKEGG(kk, name_kk[i])
}
result[c(2,3,4,8,20),]
result <- kk@result
nrow(result)
sig_genes_tmp <- result[result$p.adjust<0.05,]
#or specify pathways that you are interested in:
result$Description
result[c(2,3,4,8,20),]
result$Description
sig_genes_tmp
sig_genes_tmp <- result[c(2,3,4,8,20),]
sig_genes_tmp
sig_genes_tmp$Description
#get genes in significant pathways or specific pathways
load('kegg_result.Rdata')
result <- kk@result
write.table(result,"kegg_pathway.txt",quote = F,row.names = F,col.names = T,sep = '\t')
load('Data.Rdata')
View(upgenes)
View(downgenes)
#get genes in significant pathways or specific pathways
load('kegg_result.Rdata')
result <- kk@result
nrow(result)
#or specify pathways that you are interested in:
result$Description
grep('graft',result$Description)
grep('graft',result$Description)
gregexpr('graft',result)
gregexpr('graft',result$Description)
grep('graft',result$Description)
grep('host',result$Description)
result$Description
View(result)
# Sat Nov 17 18:15:24 2018 ------------------------------
rm(list=ls())
load('Data.Rdata')
index <- grep('BGI',upgenes$GeneID)#Filter our BGI novel genes.
upgenes <- upgenes[-index,]
index <- grep('BGI',downgenes$GeneID)#Filter our BGI novel genes.
downgenes <- downgenes[-index,]
index <- grep('BGI',background_all$GeneID)
background_all <- background_all[-index,]#filter out BGI_novel genes.
index <- grep('BGI',background_DEG$GeneID)
background_DEG <- background_DEG[-index,]
entr_up <- as.vector(upgenes$GeneID)#这些上调的基因可以导入clueGO直接进行分析了。
entr_down <- as.vector(downgenes$GeneID)
entr_bg <- as.vector(background_all$GeneID)
entr_up_down <- c(entr_up,entr_down)
library(clusterProfiler)
library(org.Hs.eg.db)
library(enrichplot)
library(pathview)
library(stringr)
library(dplyr)
library(DOSE)
library(ggplot2)
#kegg over-representation test
kk <- enrichKEGG(gene         = entr_up_down,
organism     = 'hsa',
pvalueCutoff = 0.01,minGSSize = 10, maxGSSize = 500,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_up_and_down.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
cnetplot(kk, showCategory = 20)
dev.off()
#kegg over-representation test
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.01,minGSSize = 10, maxGSSize = 500,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_up_and_down.pdf',width = 14,onefile = T)
dev.off()
kk <- enrichKEGG(gene         = entr_up_down,
organism     = 'hsa',
pvalueCutoff = 0.01,minGSSize = 10, maxGSSize = 500,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_up_and_down.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.01,minGSSize = 10, maxGSSize = 500,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_up.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
kk <- enrichKEGG(gene         = entr_down,
organism     = 'hsa',
pvalueCutoff = 0.01,minGSSize = 10, maxGSSize = 500,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_down.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
#kegg over-representation test
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.05,minGSSize = 10, maxGSSize = 2000,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
kk@result
#plot
pdf('Kegg_plot_up.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
#kegg over-representation test
kk <- enrichKEGG(gene         = entr_up,
organism     = 'hsa',
pvalueCutoff = 0.05,minGSSize = 10, maxGSSize = 2000,
use_internal_data = F)
kk@geneSets
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
View(kk@result)
write.table(entr_up,'upgene.txt',sep='\n',quote = F)
write.table(entr_up,'upgene.txt',sep='\n',quote = F,row.names = F,col.names = F)
kk <- enrichKEGG(gene         = entr_up,universe = entr_bg,
organism     = 'hsa',
pvalueCutoff = 0.05,minGSSize = 10, maxGSSize = 2000,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_up.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
dev.off()
dev.off()
kk <- enrichKEGG(gene         = entr_up,universe = entr_bg,
organism     = 'hsa',
pvalueCutoff = 0.05,minGSSize = 10, maxGSSize = 2000,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_up.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
View(kk@result)
kk <- enrichKEGG(gene         = entr_up_down,universe = entr_bg,
organism     = 'hsa',
pvalueCutoff = 0.05,minGSSize = 10, maxGSSize = 2000,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_up_and_down.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
kk <- enrichKEGG(gene         = entr_down,universe = entr_bg,
organism     = 'hsa',
pvalueCutoff = 0.05,minGSSize = 10, maxGSSize = 2000,
use_internal_data = F)
head(kk)
kk <- setReadable(kk,keytype = 'ENTREZID',OrgDb = org.Hs.eg.db)#转化ID
#plot
pdf('Kegg_plot_down.pdf',width = 14,onefile = T)
barplot(kk,drop=T,showCategory = 20,x = "GeneRatio")
dotplot(kk,showCategory = 20)
emapplot(kk, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(kk, showCategory = 20)
dev.off()
# Thu Dec 13 13:31:34 2018 ------------------------------
rm(list = ls())
load('Data.Rdata')
View(downgenes)
View(background_all)
View(background_DEG)
colnames(background_all)
head(background_all)
data <- background_all[,2:10]
View(data)
rownames(data) <- data$Other.Gene.ID
colnames(data)
data <- data[,-9]
colnames(data)
save(data,file = "Data_Jianming.Rdata")
load('Data_Jianming.Rdata')
library(corrplot)
exprSet <- data[,-9]
save(exprSet,file = "Data_Jianming.Rdata")
load('Data_Jianming.Rdata')
library(corrplot)
corrplot(cor(exprSet))
rm(list = ls())
load('Data.Rdata')
data <- background_all[,2:10]
rownames(data) <- data$Other.Gene.ID
exprSet <- data[,-9]
save(exprSet,file = "Data_Jianming.Rdata")
load('Data_Jianming.Rdata')
library(corrplot)
corrplot(cor(exprSet))
corrplot(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
p.mat = res$P,sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet))
corrplot(cor(log2(exprSet+1)))
head(exprSet)
head(log2(exprSet+1))
corrplot(cor(log2(exprSet+1)),
tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
sig.level = 0.01,insig = 'blank',
corrplot(cor(log2(exprSet+1)),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
library(pheatmap)
corrplot(scale(cor(exprSet)),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(scale(cor(exprSet))
corrplot(scale(cor(exprSet)))
corrplot(scale(cor(exprSet)))
corrplot(scale(cor(log2(exprSet+1))))
pheatmap(cor(exprSet))
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 2,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = NA,legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'black',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'white',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
corrplot(scale(cor(exprSet)),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(cor(exprSet),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
pheatmap(cor(exprSet),col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
#或者加载公用数据
library(airway)
data("airway")
str(airway)
airway@assays
View(airway)
airway
?RangedSummarizedExperiment
exprSet <- assay(airway)
View(exprSet)
#样本相关性
library(corrplot)
corrplot(cor(exprSet),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
head(exprSet)
log2(0)
log2(-999999999999999999)
log2(-100000000)
log2(.00000000000000000000000000001)
log2(13333311111111111111111111111111111111)
#未进行均一化，如下：
res <- cor(log2(exprSet+1))
res
data("airway")
airway
exprSet <- assay(airway)
#未进行均一化，如下：
res <- cor(log2(exprSet+1))
corrplot(res,
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
pheatmap(res,col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
corrplot(scale(res),
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
corrplot(res,
col = colorRampPalette(c("blue","white","red"))(100),
type='full',order='hclust',tl.col = "black",
diag=T,outline = T,bg = 'white',addgrid.col = 'black',
addCoef.col = 'black',tl.cex = 1,
sig.level = 0.01,insig = 'blank',
number.digits = 2)
pheatmap(res,col = colorRampPalette(c("blue","white","red"))(100),
scale = "row",
cluster_rows = T,cluster_cols=T,
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
clustering_method = "complete",
border_color = 'grey',legend=TRUE,
show_colnames=T,show_rownames=T,
fontsize_col = 8,
fontsize_row = 8,fontsize = 8,
main = 'Heatmap')
if (!requireNamespace("BiocManager"))
install.packages("BiocManager")
BiocManager::install()
install.packages(c("ape", "BiocManager", "broom", "broom.mixed", "carData", "caret", "cli", "data.table", "ddalpha", "dendextend", "devtools", "digest", "dimRed", "dplyr", "emmeans", "esquisse", "evaluate", "fansi", "ggplot2", "ggpubr", "ggridges", "ggstatsplot", "haven", "htmlwidgets", "httr", "ipred", "jmv", "jmvcore", "jsonlite", "knitr", "later", "lattice", "lava", "lme4", "maptools", "markdown", "MASS", "Matrix", "mclust", "mgcv", "mime", "ModelMetrics", "nloptr", "openssl", "plotrix", "prediction", "processx", "ps", "psych", "R6", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "recipes", "remotes", "reshape", "rio", "RJSONIO", "rlang", "robustbase", "rstudioapi", "rvcheck", "scico", "sfsmisc", "shiny", "shinyWidgets", "sjlabelled", "sjmisc", "sjstats", "snow", "stringi", "survival", "tidyr", "tidyselect", "tidytree", "TMB", "tweenr", "units", "webshot", "xtable"))

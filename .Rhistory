upgenes <- read.csv('up.csv')
downgenes <- read.csv('down.csv')
View(upgenes)
View(downgenes)
library(ggplot2)
colnames(upgenes)
#geneList contains three features:
#numeric vector: fold change or other type of numerical variable
#named vector: every number has a name, the corresponding gene ID
#sorted vector: number should be sorted in decreasing order
geneList=upgenes$log2.HN.FK.
names(geneList)=as.character(upgenes$Other.Gene.ID)
geneList
geneList=sort(geneList,decreasing = T)
###   over-representation test
library(clusterProfiler)
kk.up <- enrichKEGG(gene         = geneList,
organism     = 'hsa',
universe     = gene_all,
pvalueCutoff = 0.05,
qvalueCutoff =0.05)
library(clusterProfiler)
library(org.Hs.eg.db)
keytypes(org.Hs.eg.db)
eg <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',OrgDb = 'org.Hs.eg.db')
head(eg)
eg
keytypes(org.Hs.eg.db)
eg <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','ENSEMBL','GO','GENENAME'),OrgDb = 'org.Hs.eg.db')
head(eg)
eg
View(eg)
eg <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','ENSEMBL','GENENAME'),OrgDb = 'org.Hs.eg.db')
eg <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),OrgDb = 'org.Hs.eg.db')
ids <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),OrgDb = 'org.Hs.eg.db')
head(ids)
ids <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),OrgDb = 'org.Hs.eg.db')
head(ids)
keytypes(org.Hs.eg.db)
org.Hs.eg.db$getClass
org.Hs.eg.db
keg2np <- bitr_kegg(ids$ENTREZID,fromType = 'kegg',toType = 'ncbi-proteinid',organism = 'hsa')
keg2np
#convert gene symbols to ENTREZID ID
keytypes(org.Hs.eg.db)
head(keg2np)
save(upgenes,downgenes,'Input_data.Rdata')
save(upgenes,downgenes,file = 'Input_data.Rdata')
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Input_data.Rdata')
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Input_data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
#convert gene symbols to ENTREZID ID
keytypes(org.Hs.eg.db)
ids <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),OrgDb = 'org.Hs.eg.db')
head(ids)
#The ID type (both fromType & toType) should be one of ‘kegg’, ‘ncbi-geneid’, ‘ncbi-proteinid’ or
#‘uniprot’. The ‘kegg’ is the primary ID used in KEGG database. The data source of KEGG was from NCBI.
#A rule of thumb for the ‘kegg’ ID is entrez ID for eukaryote species and Locus ID for prokaryotes.
keg2np <- bitr_kegg(ids$ENTREZID,fromType = 'kegg',toType = 'ncbi-proteinid',organism = 'hsa')
head(keg2np)
#GO analysis
head(ids)
gene <- ids$SYMBOL
data(geneList, package="DOSE")
gene <- names(geneList)[abs(geneList) > 2]
data(geneList, package="DOSE")
head(geneList)
gene <- names(geneList)[abs(geneList) > 2]
gene <- ids$ENTREZID
ggo <- groupGO(gene = gene,OrgDb = org.Hs.eg.db,ont = 'BP',level = 3,keyType = 'ENTREZID',readable = T)
head(goo)
head(ggo)
View(ggo)
View(ggo)
gene
background <- read.csv('background.csv')
View(background)
attach(background)
colnames(background)
upgenes <- background[FK.FPKM>=1&HN.FPKM>=1&log2.HN.FK.>=2&Qvalue.FK.vs.HN.<0.01,]
downgenes <- background[FK.FPKM>=1&HN.FPKM>=1&log2.HN.FK.<=-2&Qvalue.FK.vs.HN.<0.01,]
detach(background)
save(background,upgenes,downgenes,file = 'Data.Rdata')
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
#convert gene symbols to ENTREZID ID
keytypes(org.Hs.eg.db)
ids <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),OrgDb = 'org.Hs.eg.db')
head(ids)
#The ID type (both fromType & toType) should be one of ‘kegg’, ‘ncbi-geneid’, ‘ncbi-proteinid’ or
#‘uniprot’. The ‘kegg’ is the primary ID used in KEGG database. The data source of KEGG was from NCBI.
#A rule of thumb for the ‘kegg’ ID is entrez ID for eukaryote species and Locus ID for prokaryotes.
keg2np <- bitr_kegg(ids$ENTREZID,fromType = 'kegg',toType = 'ncbi-proteinid',organism = 'hsa')
Entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),
OrgDb = 'org.Hs.eg.db')
entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),
OrgDb = 'org.Hs.eg.db')
head(entr_up)
#The ID type (both fromType & toType) should be one of ‘kegg’, ‘ncbi-geneid’, ‘ncbi-proteinid’ or
#‘uniprot’. The ‘kegg’ is the primary ID used in KEGG database. The data source of KEGG was from NCBI.
#A rule of thumb for the ‘kegg’ ID is entrez ID for eukaryote species and Locus ID for prokaryotes.
keg2np <- bitr_kegg(entr_up$ENTREZID,fromType = 'kegg',toType = 'ncbi-proteinid',organism = 'hsa')
head(keg2np)
#GO analysis
#GO classification
gene <- entr_up$ENTREZID
ggo <- groupGO(gene = gene,OrgDb = org.Hs.eg.db,ont = 'BP',level = 3,keyType = 'ENTREZID',readable = T)
head(ggo)
write.table(ggo,'1.txt')
data(geneList, package="DOSE")
names(geneList)
#GO over-representation test
entr_bg <- bitr(background$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
head(background)
View(background)
#GO over-representation test
entr_bg <- bitr(background$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
head(entr_bg)
View(entr_bg)
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.01,
universe = entr_bg,readable = F)
View(background)
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.01,
universe = entr_bg,readable = F)
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg,readable = F)
background_all <- read.csv('background_all.csv')
save(background,upgenes,downgenes,background_all,file = 'Data.Rdata')
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
#convert gene symbols to ENTREZID ID
keytypes(org.Hs.eg.db)
entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),
OrgDb = 'org.Hs.eg.db')
#GO over-representation test
entr_bg <- bitr(background_all$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
background_DEG <- read.csv('DEG.csv')
background_all <- read.csv('all.csv')
attach(background_DEG)
upgenes <- background_DEG[FK.FPKM>=1&HN.FPKM>=1&log2.HN.FK.>=2&Qvalue.FK.vs.HN.<0.01,]
downgenes <- background_DEG[FK.FPKM>=1&HN.FPKM>=1&log2.HN.FK.<=-2&Qvalue.FK.vs.HN.<0.01,]
detach(background_DEG)
save(background,upgenes,downgenes,background_all,file = 'Data.Rdata')
# Fri Nov 16 15:44:08 2018 ------------------------------
load('Data.Rdata')
library(clusterProfiler)
library(org.Hs.eg.db)
#convert gene symbols to ENTREZID ID
keytypes(org.Hs.eg.db)
entr_up <- bitr(upgenes$Other.Gene.ID,fromType = 'SYMBOL',toType = c('ENTREZID','GENENAME'),
OrgDb = 'org.Hs.eg.db')
head(entr_up)
#The ID type (both fromType & toType) should be one of ‘kegg’, ‘ncbi-geneid’, ‘ncbi-proteinid’ or
#‘uniprot’. The ‘kegg’ is the primary ID used in KEGG database. The data source of KEGG was from NCBI.
#A rule of thumb for the ‘kegg’ ID is entrez ID for eukaryote species and Locus ID for prokaryotes.
keg2np <- bitr_kegg(entr_up$ENTREZID,fromType = 'kegg',toType = 'ncbi-proteinid',organism = 'hsa')
head(keg2np)
#GO analysis
#GO classification
gene <- entr_up$ENTREZID
#GO over-representation test
entr_bg <- bitr(background_all$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
head(entr_bg)
View(entr_bg)
head(entr_bg)
#GO analysis
#GO classification
gene <- entr_up$ENTREZID
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg,readable = F)
barplot(ggo)
barplot(ggo,drop=T,showCategory=20)
barplot(ggo,drop=F,showCategory=20)
barplot(ggo,drop=T,showCategory=20)
barplot(ggo,drop=F,showCategory=20)
barplot(ggo,drop=T,showCategory=20)
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg,readable = T)
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'CC',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
str(ego)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20)
dotplot(ggo)
dotplot(ego,title="enrichGo CC")
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = 'BP',
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20)
dotplot(ego,title="enrichGo")
par(mfrow=c(2,2))
par(mfrow=c(3,2))
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20)
dotplot(ego,title="enrichGo")
}
dev.off()
head(entr_bg)
pdf('enrichGO_plot.PDF',onefile = T)
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
a <- barplot(ego,drop=T,showCategory = 20)
b <- dotplot(ego,title="enrichGo")
print(a)
print(b)
}
dev.off()
str(geneList)
#GO over-representation test/enrichGO 分析
entr_bg <- bitr(background_DEG$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
barplot(ego,drop=T,showCategory = 20,title="enrichGo_")
dotplot(ego,title="enrichGo_")
enrichMap(ego, vertex.label.cex=1.2, layout=igraph::layout.kamada.kawai)
c <- emapplot(ego, vertex.label.cex=1.2, layout=igraph::layout.kamada.kawai)
str(ego)
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = kk'')
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk')
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk')
cnetplot(ego, showCategory = 20)
pdf('enrichGO_plot.PDF',width = 14,onefile = T)
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
a <- barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
b <- dotplot(ego,title=paste0("enrichGo_",i))
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
d <- cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
print(a)
print(b)
print(c)
print(d)
}
dev.off()
i <- 'BP'
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
universe = entr_bg$ENTREZID,readable = T)
head(as.data.frame(ego))
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T)
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
#GO over-representation test/enrichGO 分析
entr_bg <- bitr(background_all$Other.Gene.ID,fromType = 'SYMBOL',toType = 'ENTREZID',
OrgDb = 'org.Hs.eg.db')
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T,universe = entr_bg$ENTREZID)
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
dotplot(ego,title=paste0("enrichGo_",i))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
dotplot(ego,title=paste0("enrichGo_",i))
dotplot(ego,showCategory = 30,title=paste0("enrichGo_",i))
dotplot(ego,showCategory = 20,title=paste0("enrichGo_",i))
barplot(ego,drop=T,showCategory = 30,title=paste0("enrichGo_",i))
barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
rm(i)
pdf('enrichGO_plot.PDF',width = 14,onefile = T)
for (i in c('CC','BP','MF')) {
ego <- enrichGO(gene = gene,OrgDb = org.Hs.eg.db,keyType = 'ENTREZID',ont = i,
pAdjustMethod = 'BH',pvalueCutoff = 0.01,qvalueCutoff = 0.05,
readable = T,universe = entr_bg$ENTREZID)
head(as.data.frame(ego))
a <- barplot(ego,drop=T,showCategory = 20,title=paste0("enrichGo_",i))
b <- dotplot(ego,showCategory = 20,title=paste0("enrichGo_",i))
c <- emapplot(ego, showCategory=20,color = "p.adjust",layout = 'kk',title=paste0("enrichGo_",i))
d <- cnetplot(ego, showCategory = 20,title=paste0("enrichGo_",i))
print(a)
print(b)
print(c)
print(d)
}
dev.off()
